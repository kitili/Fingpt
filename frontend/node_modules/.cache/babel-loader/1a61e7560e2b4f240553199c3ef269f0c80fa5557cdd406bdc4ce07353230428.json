{"ast":null,"code":"import _objectSpread from\"/home/kiki/Documents/FinGPT for Everyone/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _taggedTemplateLiteral from\"/home/kiki/Documents/FinGPT for Everyone/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject;import React,{useState}from'react';import{Card,Row,Col,Input,Button,Select,Space,Typography,Spin,message,Table,Statistic}from'antd';import{ExperimentOutlined,LineChartOutlined}from'@ant-design/icons';import{useQuery}from'react-query';import axios from'axios';import Plot from'react-plotly.js';import styled from'styled-components';import{jsxs as _jsxs,jsx as _jsx,Fragment as _Fragment}from\"react/jsx-runtime\";const{Title,Text}=Typography;const{Option}=Select;const BacktestingContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  .backtest-card {\\n    transition: all 0.3s ease;\\n    \\n    &:hover {\\n      transform: translateY(-2px);\\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\\n    }\\n  }\\n\"])));const fetchBacktest=async(symbol,strategy,startDate,endDate,initialCash)=>{const response=await axios.post('/api/backtest',{symbol,strategy,start_date:startDate,end_date:endDate,initial_cash:initialCash});return response.data;};const Backtesting=()=>{const[symbol,setSymbol]=useState('AAPL');const[strategy,setStrategy]=useState('moving_average');const[startDate,setStartDate]=useState('2023-01-01');const[endDate,setEndDate]=useState('2023-12-31');const[initialCash,setInitialCash]=useState(100000);const{data:backtestData,isLoading,refetch}=useQuery(['backtest',symbol,strategy,startDate,endDate,initialCash],()=>fetchBacktest(symbol,strategy,startDate,endDate,initialCash),{enabled:false,onError:error=>{message.error('Failed to run backtest');}});const handleBacktest=()=>{refetch();};const createEquityCurve=trades=>{if(!trades||trades.length===0)return null;// Generate mock equity curve data\nconst dates=[];const equity=[];let currentEquity=initialCash;for(let i=0;i<252;i++){const date=new Date(startDate);date.setDate(date.getDate()+i);dates.push(date);// Simulate equity growth\ncurrentEquity*=1+(Math.random()-0.5)*0.02;equity.push(currentEquity);}return{data:[{x:dates,y:equity,type:'scatter',mode:'lines',name:'Equity Curve',line:{color:'#1890ff',width:2}}],layout:{title:'Equity Curve',xaxis:{title:'Date'},yaxis:{title:'Portfolio Value ($)'},height:400}};};const createDrawdownChart=trades=>{if(!trades||trades.length===0)return null;// Generate mock drawdown data\nconst dates=[];const drawdown=[];for(let i=0;i<252;i++){const date=new Date(startDate);date.setDate(date.getDate()+i);dates.push(date);// Simulate drawdown\ndrawdown.push((Math.random()-0.5)*20);}return{data:[{x:dates,y:drawdown,type:'scatter',mode:'lines',name:'Drawdown %',fill:'tonexty',line:{color:'#ff4d4f'}}],layout:{title:'Drawdown Analysis',xaxis:{title:'Date'},yaxis:{title:'Drawdown (%)'},height:300}};};const tradeColumns=[{title:'Entry Date',dataIndex:'entry_date',key:'entry_date',render:date=>new Date(date).toLocaleDateString()},{title:'Exit Date',dataIndex:'exit_date',key:'exit_date',render:date=>new Date(date).toLocaleDateString()},{title:'Entry Price',dataIndex:'entry_price',key:'entry_price',render:price=>\"$\".concat(price.toFixed(2))},{title:'Exit Price',dataIndex:'exit_price',key:'exit_price',render:price=>\"$\".concat(price.toFixed(2))},{title:'Quantity',dataIndex:'quantity',key:'quantity'},{title:'P&L',dataIndex:'pnl',key:'pnl',render:pnl=>/*#__PURE__*/_jsxs(Text,{style:{color:pnl>=0?'#52c41a':'#ff4d4f'},children:[\"$\",pnl.toFixed(2)]})},{title:'P&L %',dataIndex:'pnl_pct',key:'pnl_pct',render:pnlPct=>/*#__PURE__*/_jsxs(Text,{style:{color:pnlPct>=0?'#52c41a':'#ff4d4f'},children:[(pnlPct*100).toFixed(2),\"%\"]})},{title:'Holding Period',dataIndex:'holding_period',key:'holding_period',render:days=>\"\".concat(days,\" days\")}];return/*#__PURE__*/_jsx(BacktestingContainer,{children:/*#__PURE__*/_jsxs(Space,{direction:\"vertical\",size:\"large\",style:{width:'100%'},children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Title,{level:2,children:\"\\uD83E\\uDDEA Strategy Backtesting\"}),/*#__PURE__*/_jsx(Text,{type:\"secondary\",children:\"Test trading strategies with historical data and performance analysis\"})]}),/*#__PURE__*/_jsxs(Card,{title:\"Backtest Configuration\",size:\"small\",className:\"backtest-card\",children:[/*#__PURE__*/_jsxs(Row,{gutter:[16,16],children:[/*#__PURE__*/_jsx(Col,{xs:24,sm:6,children:/*#__PURE__*/_jsx(Input,{placeholder:\"Symbol\",value:symbol,onChange:e=>setSymbol(e.target.value.toUpperCase())})}),/*#__PURE__*/_jsx(Col,{xs:24,sm:6,children:/*#__PURE__*/_jsxs(Select,{value:strategy,onChange:setStrategy,style:{width:'100%'},children:[/*#__PURE__*/_jsx(Option,{value:\"moving_average\",children:\"Moving Average\"}),/*#__PURE__*/_jsx(Option,{value:\"rsi\",children:\"RSI Strategy\"})]})}),/*#__PURE__*/_jsx(Col,{xs:24,sm:6,children:/*#__PURE__*/_jsx(Input,{type:\"date\",value:startDate,onChange:e=>setStartDate(e.target.value)})}),/*#__PURE__*/_jsx(Col,{xs:24,sm:6,children:/*#__PURE__*/_jsx(Input,{type:\"date\",value:endDate,onChange:e=>setEndDate(e.target.value)})})]}),/*#__PURE__*/_jsxs(Row,{gutter:[16,16],style:{marginTop:16},children:[/*#__PURE__*/_jsx(Col,{xs:24,sm:12,children:/*#__PURE__*/_jsx(Input,{placeholder:\"Initial Cash\",value:initialCash,onChange:e=>setInitialCash(parseFloat(e.target.value)||100000),prefix:\"$\"})}),/*#__PURE__*/_jsx(Col,{xs:24,sm:12,children:/*#__PURE__*/_jsx(Button,{type:\"primary\",icon:/*#__PURE__*/_jsx(ExperimentOutlined,{}),onClick:handleBacktest,loading:isLoading,block:true,children:\"Run Backtest\"})})]})]}),isLoading&&/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center',padding:'50px'},children:[/*#__PURE__*/_jsx(Spin,{size:\"large\"}),/*#__PURE__*/_jsx(\"div\",{style:{marginTop:16},children:/*#__PURE__*/_jsx(Text,{children:\"Running backtest...\"})})]}),backtestData&&!isLoading&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Row,{gutter:[16,16],children:[/*#__PURE__*/_jsx(Col,{xs:24,lg:12,children:/*#__PURE__*/_jsx(Card,{title:\"Performance Metrics\",size:\"small\",className:\"backtest-card\",children:/*#__PURE__*/_jsxs(Row,{gutter:[16,16],children:[/*#__PURE__*/_jsx(Col,{xs:12,children:/*#__PURE__*/_jsx(Statistic,{title:\"Total Return\",value:backtestData.total_return*100,precision:2,suffix:\"%\",valueStyle:{color:backtestData.total_return>=0?'#3f8600':'#cf1322'}})}),/*#__PURE__*/_jsx(Col,{xs:12,children:/*#__PURE__*/_jsx(Statistic,{title:\"Annualized Return\",value:backtestData.annualized_return*100,precision:2,suffix:\"%\",valueStyle:{color:backtestData.annualized_return>=0?'#3f8600':'#cf1322'}})}),/*#__PURE__*/_jsx(Col,{xs:12,children:/*#__PURE__*/_jsx(Statistic,{title:\"Volatility\",value:backtestData.volatility*100,precision:2,suffix:\"%\"})}),/*#__PURE__*/_jsx(Col,{xs:12,children:/*#__PURE__*/_jsx(Statistic,{title:\"Sharpe Ratio\",value:backtestData.sharpe_ratio,precision:3})}),/*#__PURE__*/_jsx(Col,{xs:12,children:/*#__PURE__*/_jsx(Statistic,{title:\"Max Drawdown\",value:backtestData.max_drawdown*100,precision:2,suffix:\"%\",valueStyle:{color:'#cf1322'}})}),/*#__PURE__*/_jsx(Col,{xs:12,children:/*#__PURE__*/_jsx(Statistic,{title:\"Win Rate\",value:backtestData.win_rate*100,precision:1,suffix:\"%\"})})]})})}),/*#__PURE__*/_jsx(Col,{xs:24,lg:12,children:/*#__PURE__*/_jsx(Card,{title:\"Trade Statistics\",size:\"small\",className:\"backtest-card\",children:/*#__PURE__*/_jsxs(Space,{direction:\"vertical\",style:{width:'100%'},children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Text,{strong:true,children:\"Strategy: \"}),/*#__PURE__*/_jsx(Text,{children:backtestData.strategy.replace('_',' ').toUpperCase()})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Text,{strong:true,children:\"Symbol: \"}),/*#__PURE__*/_jsx(Text,{children:backtestData.symbol})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Text,{strong:true,children:\"Total Trades: \"}),/*#__PURE__*/_jsx(Text,{children:backtestData.total_trades})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Text,{strong:true,children:\"Average Trade Return: \"}),/*#__PURE__*/_jsxs(Text,{style:{color:backtestData.avg_trade_return>=0?'#3f8600':'#cf1322'},children:[(backtestData.avg_trade_return*100).toFixed(2),\"%\"]})]})]})})})]}),/*#__PURE__*/_jsx(Card,{title:\"Equity Curve\",size:\"small\",className:\"backtest-card\",children:/*#__PURE__*/_jsx(\"div\",{style:{height:'400px'},children:/*#__PURE__*/_jsx(Plot,{data:createEquityCurve(backtestData.trades).data,layout:createEquityCurve(backtestData.trades).layout,style:{width:'100%',height:'100%'}})})}),/*#__PURE__*/_jsx(Card,{title:\"Drawdown Analysis\",size:\"small\",className:\"backtest-card\",children:/*#__PURE__*/_jsx(\"div\",{style:{height:'300px'},children:/*#__PURE__*/_jsx(Plot,{data:createDrawdownChart(backtestData.trades).data,layout:createDrawdownChart(backtestData.trades).layout,style:{width:'100%',height:'100%'}})})}),/*#__PURE__*/_jsx(Card,{title:\"Trade History\",size:\"small\",className:\"backtest-card\",children:/*#__PURE__*/_jsx(Table,{columns:tradeColumns,dataSource:backtestData.trades.map((trade,index)=>_objectSpread(_objectSpread({},trade),{},{key:index})),pagination:{pageSize:10},size:\"small\",scroll:{x:800}})})]})]})});};export default Backtesting;","map":{"version":3,"names":["React","useState","Card","Row","Col","Input","Button","Select","Space","Typography","Spin","message","Table","Statistic","ExperimentOutlined","LineChartOutlined","useQuery","axios","Plot","styled","jsxs","_jsxs","jsx","_jsx","Fragment","_Fragment","Title","Text","Option","BacktestingContainer","div","_templateObject","_taggedTemplateLiteral","fetchBacktest","symbol","strategy","startDate","endDate","initialCash","response","post","start_date","end_date","initial_cash","data","Backtesting","setSymbol","setStrategy","setStartDate","setEndDate","setInitialCash","backtestData","isLoading","refetch","enabled","onError","error","handleBacktest","createEquityCurve","trades","length","dates","equity","currentEquity","i","date","Date","setDate","getDate","push","Math","random","x","y","type","mode","name","line","color","width","layout","title","xaxis","yaxis","height","createDrawdownChart","drawdown","fill","tradeColumns","dataIndex","key","render","toLocaleDateString","price","concat","toFixed","pnl","style","children","pnlPct","days","direction","size","level","className","gutter","xs","sm","placeholder","value","onChange","e","target","toUpperCase","marginTop","parseFloat","prefix","icon","onClick","loading","block","textAlign","padding","lg","total_return","precision","suffix","valueStyle","annualized_return","volatility","sharpe_ratio","max_drawdown","win_rate","strong","replace","total_trades","avg_trade_return","columns","dataSource","map","trade","index","_objectSpread","pagination","pageSize","scroll"],"sources":["/home/kiki/Documents/FinGPT for Everyone/frontend/src/pages/Backtesting.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Card, Row, Col, Input, Button, Select, Space, Typography, Spin, message, Table, Statistic } from 'antd';\nimport { ExperimentOutlined, LineChartOutlined } from '@ant-design/icons';\nimport { useQuery } from 'react-query';\nimport axios from 'axios';\nimport Plot from 'react-plotly.js';\nimport styled from 'styled-components';\n\nconst { Title, Text } = Typography;\nconst { Option } = Select;\n\nconst BacktestingContainer = styled.div`\n  .backtest-card {\n    transition: all 0.3s ease;\n    \n    &:hover {\n      transform: translateY(-2px);\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n    }\n  }\n`;\n\nconst fetchBacktest = async (symbol, strategy, startDate, endDate, initialCash) => {\n  const response = await axios.post('/api/backtest', {\n    symbol,\n    strategy,\n    start_date: startDate,\n    end_date: endDate,\n    initial_cash: initialCash\n  });\n  return response.data;\n};\n\nconst Backtesting = () => {\n  const [symbol, setSymbol] = useState('AAPL');\n  const [strategy, setStrategy] = useState('moving_average');\n  const [startDate, setStartDate] = useState('2023-01-01');\n  const [endDate, setEndDate] = useState('2023-12-31');\n  const [initialCash, setInitialCash] = useState(100000);\n\n  const { data: backtestData, isLoading, refetch } = useQuery(\n    ['backtest', symbol, strategy, startDate, endDate, initialCash],\n    () => fetchBacktest(symbol, strategy, startDate, endDate, initialCash),\n    {\n      enabled: false,\n      onError: (error) => {\n        message.error('Failed to run backtest');\n      }\n    }\n  );\n\n  const handleBacktest = () => {\n    refetch();\n  };\n\n  const createEquityCurve = (trades) => {\n    if (!trades || trades.length === 0) return null;\n\n    // Generate mock equity curve data\n    const dates = [];\n    const equity = [];\n    let currentEquity = initialCash;\n    \n    for (let i = 0; i < 252; i++) {\n      const date = new Date(startDate);\n      date.setDate(date.getDate() + i);\n      dates.push(date);\n      \n      // Simulate equity growth\n      currentEquity *= (1 + (Math.random() - 0.5) * 0.02);\n      equity.push(currentEquity);\n    }\n\n    return {\n      data: [{\n        x: dates,\n        y: equity,\n        type: 'scatter',\n        mode: 'lines',\n        name: 'Equity Curve',\n        line: { color: '#1890ff', width: 2 }\n      }],\n      layout: {\n        title: 'Equity Curve',\n        xaxis: { title: 'Date' },\n        yaxis: { title: 'Portfolio Value ($)' },\n        height: 400\n      }\n    };\n  };\n\n  const createDrawdownChart = (trades) => {\n    if (!trades || trades.length === 0) return null;\n\n    // Generate mock drawdown data\n    const dates = [];\n    const drawdown = [];\n    \n    for (let i = 0; i < 252; i++) {\n      const date = new Date(startDate);\n      date.setDate(date.getDate() + i);\n      dates.push(date);\n      \n      // Simulate drawdown\n      drawdown.push((Math.random() - 0.5) * 20);\n    }\n\n    return {\n      data: [{\n        x: dates,\n        y: drawdown,\n        type: 'scatter',\n        mode: 'lines',\n        name: 'Drawdown %',\n        fill: 'tonexty',\n        line: { color: '#ff4d4f' }\n      }],\n      layout: {\n        title: 'Drawdown Analysis',\n        xaxis: { title: 'Date' },\n        yaxis: { title: 'Drawdown (%)' },\n        height: 300\n      }\n    };\n  };\n\n  const tradeColumns = [\n    {\n      title: 'Entry Date',\n      dataIndex: 'entry_date',\n      key: 'entry_date',\n      render: (date) => new Date(date).toLocaleDateString(),\n    },\n    {\n      title: 'Exit Date',\n      dataIndex: 'exit_date',\n      key: 'exit_date',\n      render: (date) => new Date(date).toLocaleDateString(),\n    },\n    {\n      title: 'Entry Price',\n      dataIndex: 'entry_price',\n      key: 'entry_price',\n      render: (price) => `$${price.toFixed(2)}`,\n    },\n    {\n      title: 'Exit Price',\n      dataIndex: 'exit_price',\n      key: 'exit_price',\n      render: (price) => `$${price.toFixed(2)}`,\n    },\n    {\n      title: 'Quantity',\n      dataIndex: 'quantity',\n      key: 'quantity',\n    },\n    {\n      title: 'P&L',\n      dataIndex: 'pnl',\n      key: 'pnl',\n      render: (pnl) => (\n        <Text style={{ color: pnl >= 0 ? '#52c41a' : '#ff4d4f' }}>\n          ${pnl.toFixed(2)}\n        </Text>\n      ),\n    },\n    {\n      title: 'P&L %',\n      dataIndex: 'pnl_pct',\n      key: 'pnl_pct',\n      render: (pnlPct) => (\n        <Text style={{ color: pnlPct >= 0 ? '#52c41a' : '#ff4d4f' }}>\n          {(pnlPct * 100).toFixed(2)}%\n        </Text>\n      ),\n    },\n    {\n      title: 'Holding Period',\n      dataIndex: 'holding_period',\n      key: 'holding_period',\n      render: (days) => `${days} days`,\n    },\n  ];\n\n  return (\n    <BacktestingContainer>\n      <Space direction=\"vertical\" size=\"large\" style={{ width: '100%' }}>\n        <div>\n          <Title level={2}>🧪 Strategy Backtesting</Title>\n          <Text type=\"secondary\">\n            Test trading strategies with historical data and performance analysis\n          </Text>\n        </div>\n\n        <Card title=\"Backtest Configuration\" size=\"small\" className=\"backtest-card\">\n          <Row gutter={[16, 16]}>\n            <Col xs={24} sm={6}>\n              <Input\n                placeholder=\"Symbol\"\n                value={symbol}\n                onChange={(e) => setSymbol(e.target.value.toUpperCase())}\n              />\n            </Col>\n            <Col xs={24} sm={6}>\n              <Select\n                value={strategy}\n                onChange={setStrategy}\n                style={{ width: '100%' }}\n              >\n                <Option value=\"moving_average\">Moving Average</Option>\n                <Option value=\"rsi\">RSI Strategy</Option>\n              </Select>\n            </Col>\n            <Col xs={24} sm={6}>\n              <Input\n                type=\"date\"\n                value={startDate}\n                onChange={(e) => setStartDate(e.target.value)}\n              />\n            </Col>\n            <Col xs={24} sm={6}>\n              <Input\n                type=\"date\"\n                value={endDate}\n                onChange={(e) => setEndDate(e.target.value)}\n              />\n            </Col>\n          </Row>\n          <Row gutter={[16, 16]} style={{ marginTop: 16 }}>\n            <Col xs={24} sm={12}>\n              <Input\n                placeholder=\"Initial Cash\"\n                value={initialCash}\n                onChange={(e) => setInitialCash(parseFloat(e.target.value) || 100000)}\n                prefix=\"$\"\n              />\n            </Col>\n            <Col xs={24} sm={12}>\n              <Button\n                type=\"primary\"\n                icon={<ExperimentOutlined />}\n                onClick={handleBacktest}\n                loading={isLoading}\n                block\n              >\n                Run Backtest\n              </Button>\n            </Col>\n          </Row>\n        </Card>\n\n        {isLoading && (\n          <div style={{ textAlign: 'center', padding: '50px' }}>\n            <Spin size=\"large\" />\n            <div style={{ marginTop: 16 }}>\n              <Text>Running backtest...</Text>\n            </div>\n          </div>\n        )}\n\n        {backtestData && !isLoading && (\n          <>\n            <Row gutter={[16, 16]}>\n              <Col xs={24} lg={12}>\n                <Card title=\"Performance Metrics\" size=\"small\" className=\"backtest-card\">\n                  <Row gutter={[16, 16]}>\n                    <Col xs={12}>\n                      <Statistic\n                        title=\"Total Return\"\n                        value={backtestData.total_return * 100}\n                        precision={2}\n                        suffix=\"%\"\n                        valueStyle={{ color: backtestData.total_return >= 0 ? '#3f8600' : '#cf1322' }}\n                      />\n                    </Col>\n                    <Col xs={12}>\n                      <Statistic\n                        title=\"Annualized Return\"\n                        value={backtestData.annualized_return * 100}\n                        precision={2}\n                        suffix=\"%\"\n                        valueStyle={{ color: backtestData.annualized_return >= 0 ? '#3f8600' : '#cf1322' }}\n                      />\n                    </Col>\n                    <Col xs={12}>\n                      <Statistic\n                        title=\"Volatility\"\n                        value={backtestData.volatility * 100}\n                        precision={2}\n                        suffix=\"%\"\n                      />\n                    </Col>\n                    <Col xs={12}>\n                      <Statistic\n                        title=\"Sharpe Ratio\"\n                        value={backtestData.sharpe_ratio}\n                        precision={3}\n                      />\n                    </Col>\n                    <Col xs={12}>\n                      <Statistic\n                        title=\"Max Drawdown\"\n                        value={backtestData.max_drawdown * 100}\n                        precision={2}\n                        suffix=\"%\"\n                        valueStyle={{ color: '#cf1322' }}\n                      />\n                    </Col>\n                    <Col xs={12}>\n                      <Statistic\n                        title=\"Win Rate\"\n                        value={backtestData.win_rate * 100}\n                        precision={1}\n                        suffix=\"%\"\n                      />\n                    </Col>\n                  </Row>\n                </Card>\n              </Col>\n              \n              <Col xs={24} lg={12}>\n                <Card title=\"Trade Statistics\" size=\"small\" className=\"backtest-card\">\n                  <Space direction=\"vertical\" style={{ width: '100%' }}>\n                    <div>\n                      <Text strong>Strategy: </Text>\n                      <Text>{backtestData.strategy.replace('_', ' ').toUpperCase()}</Text>\n                    </div>\n                    <div>\n                      <Text strong>Symbol: </Text>\n                      <Text>{backtestData.symbol}</Text>\n                    </div>\n                    <div>\n                      <Text strong>Total Trades: </Text>\n                      <Text>{backtestData.total_trades}</Text>\n                    </div>\n                    <div>\n                      <Text strong>Average Trade Return: </Text>\n                      <Text style={{ color: backtestData.avg_trade_return >= 0 ? '#3f8600' : '#cf1322' }}>\n                        {(backtestData.avg_trade_return * 100).toFixed(2)}%\n                      </Text>\n                    </div>\n                  </Space>\n                </Card>\n              </Col>\n            </Row>\n\n            <Card title=\"Equity Curve\" size=\"small\" className=\"backtest-card\">\n              <div style={{ height: '400px' }}>\n                <Plot\n                  data={createEquityCurve(backtestData.trades).data}\n                  layout={createEquityCurve(backtestData.trades).layout}\n                  style={{ width: '100%', height: '100%' }}\n                />\n              </div>\n            </Card>\n\n            <Card title=\"Drawdown Analysis\" size=\"small\" className=\"backtest-card\">\n              <div style={{ height: '300px' }}>\n                <Plot\n                  data={createDrawdownChart(backtestData.trades).data}\n                  layout={createDrawdownChart(backtestData.trades).layout}\n                  style={{ width: '100%', height: '100%' }}\n                />\n              </div>\n            </Card>\n\n            <Card title=\"Trade History\" size=\"small\" className=\"backtest-card\">\n              <Table\n                columns={tradeColumns}\n                dataSource={backtestData.trades.map((trade, index) => ({\n                  ...trade,\n                  key: index\n                }))}\n                pagination={{ pageSize: 10 }}\n                size=\"small\"\n                scroll={{ x: 800 }}\n              />\n            </Card>\n          </>\n        )}\n      </Space>\n    </BacktestingContainer>\n  );\n};\n\nexport default Backtesting;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}