{"ast":null,"code":"var _jsxFileName = \"/home/kiki/Documents/FinGPT for Everyone/frontend/src/pages/Backtesting.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Card, Row, Col, Input, Button, Select, Space, Typography, Spin, message, Table, Statistic } from 'antd';\nimport { ExperimentOutlined, LineChartOutlined } from '@ant-design/icons';\nimport { useQuery } from 'react-query';\nimport axios from 'axios';\nimport Plot from 'react-plotly.js';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Title,\n  Text\n} = Typography;\nconst {\n  Option\n} = Select;\nconst BacktestingContainer = styled.div`\n  .backtest-card {\n    transition: all 0.3s ease;\n    \n    &:hover {\n      transform: translateY(-2px);\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n    }\n  }\n`;\n_c = BacktestingContainer;\nconst fetchBacktest = async (symbol, strategy, startDate, endDate, initialCash) => {\n  const response = await axios.post('/api/backtest', {\n    symbol,\n    strategy,\n    start_date: startDate,\n    end_date: endDate,\n    initial_cash: initialCash\n  });\n  return response.data;\n};\nconst Backtesting = () => {\n  _s();\n  const [symbol, setSymbol] = useState('AAPL');\n  const [strategy, setStrategy] = useState('moving_average');\n  const [startDate, setStartDate] = useState('2023-01-01');\n  const [endDate, setEndDate] = useState('2023-12-31');\n  const [initialCash, setInitialCash] = useState(100000);\n  const {\n    data: backtestData,\n    isLoading,\n    refetch\n  } = useQuery(['backtest', symbol, strategy, startDate, endDate, initialCash], () => fetchBacktest(symbol, strategy, startDate, endDate, initialCash), {\n    enabled: false,\n    onError: error => {\n      message.error('Failed to run backtest');\n    }\n  });\n  const handleBacktest = () => {\n    refetch();\n  };\n  const createEquityCurve = trades => {\n    if (!trades || trades.length === 0) return null;\n\n    // Generate mock equity curve data\n    const dates = [];\n    const equity = [];\n    let currentEquity = initialCash;\n    for (let i = 0; i < 252; i++) {\n      const date = new Date(startDate);\n      date.setDate(date.getDate() + i);\n      dates.push(date);\n\n      // Simulate equity growth\n      currentEquity *= 1 + (Math.random() - 0.5) * 0.02;\n      equity.push(currentEquity);\n    }\n    return {\n      data: [{\n        x: dates,\n        y: equity,\n        type: 'scatter',\n        mode: 'lines',\n        name: 'Equity Curve',\n        line: {\n          color: '#1890ff',\n          width: 2\n        }\n      }],\n      layout: {\n        title: 'Equity Curve',\n        xaxis: {\n          title: 'Date'\n        },\n        yaxis: {\n          title: 'Portfolio Value ($)'\n        },\n        height: 400\n      }\n    };\n  };\n  const createDrawdownChart = trades => {\n    if (!trades || trades.length === 0) return null;\n\n    // Generate mock drawdown data\n    const dates = [];\n    const drawdown = [];\n    for (let i = 0; i < 252; i++) {\n      const date = new Date(startDate);\n      date.setDate(date.getDate() + i);\n      dates.push(date);\n\n      // Simulate drawdown\n      drawdown.push((Math.random() - 0.5) * 20);\n    }\n    return {\n      data: [{\n        x: dates,\n        y: drawdown,\n        type: 'scatter',\n        mode: 'lines',\n        name: 'Drawdown %',\n        fill: 'tonexty',\n        line: {\n          color: '#ff4d4f'\n        }\n      }],\n      layout: {\n        title: 'Drawdown Analysis',\n        xaxis: {\n          title: 'Date'\n        },\n        yaxis: {\n          title: 'Drawdown (%)'\n        },\n        height: 300\n      }\n    };\n  };\n  const tradeColumns = [{\n    title: 'Entry Date',\n    dataIndex: 'entry_date',\n    key: 'entry_date',\n    render: date => new Date(date).toLocaleDateString()\n  }, {\n    title: 'Exit Date',\n    dataIndex: 'exit_date',\n    key: 'exit_date',\n    render: date => new Date(date).toLocaleDateString()\n  }, {\n    title: 'Entry Price',\n    dataIndex: 'entry_price',\n    key: 'entry_price',\n    render: price => `$${price.toFixed(2)}`\n  }, {\n    title: 'Exit Price',\n    dataIndex: 'exit_price',\n    key: 'exit_price',\n    render: price => `$${price.toFixed(2)}`\n  }, {\n    title: 'Quantity',\n    dataIndex: 'quantity',\n    key: 'quantity'\n  }, {\n    title: 'P&L',\n    dataIndex: 'pnl',\n    key: 'pnl',\n    render: pnl => /*#__PURE__*/_jsxDEV(Text, {\n      style: {\n        color: pnl >= 0 ? '#52c41a' : '#ff4d4f'\n      },\n      children: [\"$\", pnl.toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }, this)\n  }, {\n    title: 'P&L %',\n    dataIndex: 'pnl_pct',\n    key: 'pnl_pct',\n    render: pnlPct => /*#__PURE__*/_jsxDEV(Text, {\n      style: {\n        color: pnlPct >= 0 ? '#52c41a' : '#ff4d4f'\n      },\n      children: [(pnlPct * 100).toFixed(2), \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }, this)\n  }, {\n    title: 'Holding Period',\n    dataIndex: 'holding_period',\n    key: 'holding_period',\n    render: days => `${days} days`\n  }];\n  return /*#__PURE__*/_jsxDEV(BacktestingContainer, {\n    children: /*#__PURE__*/_jsxDEV(Space, {\n      direction: \"vertical\",\n      size: \"large\",\n      style: {\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          level: 2,\n          children: \"\\uD83E\\uDDEA Strategy Backtesting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          type: \"secondary\",\n          children: \"Test trading strategies with historical data and performance analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        title: \"Backtest Configuration\",\n        size: \"small\",\n        className: \"backtest-card\",\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          gutter: [16, 16],\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            xs: 24,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Symbol\",\n              value: symbol,\n              onChange: e => setSymbol(e.target.value.toUpperCase())\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: 24,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              value: strategy,\n              onChange: setStrategy,\n              style: {\n                width: '100%'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Option, {\n                value: \"moving_average\",\n                children: \"Moving Average\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Option, {\n                value: \"rsi\",\n                children: \"RSI Strategy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: 24,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"date\",\n              value: startDate,\n              onChange: e => setStartDate(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: 24,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"date\",\n              value: endDate,\n              onChange: e => setEndDate(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          gutter: [16, 16],\n          style: {\n            marginTop: 16\n          },\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            xs: 24,\n            sm: 12,\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Initial Cash\",\n              value: initialCash,\n              onChange: e => setInitialCash(parseFloat(e.target.value) || 100000),\n              prefix: \"$\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: 24,\n            sm: 12,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              icon: /*#__PURE__*/_jsxDEV(ExperimentOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 23\n              }, this),\n              onClick: handleBacktest,\n              loading: isLoading,\n              block: true,\n              children: \"Run Backtest\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center',\n          padding: '50px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Spin, {\n          size: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 16\n          },\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            children: \"Running backtest...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 11\n      }, this), backtestData && !isLoading && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          gutter: [16, 16],\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            xs: 24,\n            lg: 12,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              title: \"Performance Metrics\",\n              size: \"small\",\n              className: \"backtest-card\",\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                gutter: [16, 16],\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(Statistic, {\n                    title: \"Total Return\",\n                    value: backtestData.total_return * 100,\n                    precision: 2,\n                    suffix: \"%\",\n                    valueStyle: {\n                      color: backtestData.total_return >= 0 ? '#3f8600' : '#cf1322'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(Statistic, {\n                    title: \"Annualized Return\",\n                    value: backtestData.annualized_return * 100,\n                    precision: 2,\n                    suffix: \"%\",\n                    valueStyle: {\n                      color: backtestData.annualized_return >= 0 ? '#3f8600' : '#cf1322'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 277,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(Statistic, {\n                    title: \"Volatility\",\n                    value: backtestData.volatility * 100,\n                    precision: 2,\n                    suffix: \"%\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 286,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(Statistic, {\n                    title: \"Sharpe Ratio\",\n                    value: backtestData.sharpe_ratio,\n                    precision: 3\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 294,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(Statistic, {\n                    title: \"Max Drawdown\",\n                    value: backtestData.max_drawdown * 100,\n                    precision: 2,\n                    suffix: \"%\",\n                    valueStyle: {\n                      color: '#cf1322'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 301,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(Statistic, {\n                    title: \"Win Rate\",\n                    value: backtestData.win_rate * 100,\n                    precision: 1,\n                    suffix: \"%\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 310,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: 24,\n            lg: 12,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              title: \"Trade Statistics\",\n              size: \"small\",\n              className: \"backtest-card\",\n              children: /*#__PURE__*/_jsxDEV(Space, {\n                direction: \"vertical\",\n                style: {\n                  width: '100%'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(Text, {\n                    strong: true,\n                    children: \"Strategy: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 325,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Text, {\n                    children: backtestData.strategy.replace('_', ' ').toUpperCase()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 326,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(Text, {\n                    strong: true,\n                    children: \"Symbol: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 329,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Text, {\n                    children: backtestData.symbol\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 330,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(Text, {\n                    strong: true,\n                    children: \"Total Trades: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 333,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Text, {\n                    children: backtestData.total_trades\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 334,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(Text, {\n                    strong: true,\n                    children: \"Average Trade Return: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 337,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Text, {\n                    style: {\n                      color: backtestData.avg_trade_return >= 0 ? '#3f8600' : '#cf1322'\n                    },\n                    children: [(backtestData.avg_trade_return * 100).toFixed(2), \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 338,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          title: \"Equity Curve\",\n          size: \"small\",\n          className: \"backtest-card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: '400px'\n            },\n            children: /*#__PURE__*/_jsxDEV(Plot, {\n              data: createEquityCurve(backtestData.trades).data,\n              layout: createEquityCurve(backtestData.trades).layout,\n              style: {\n                width: '100%',\n                height: '100%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          title: \"Drawdown Analysis\",\n          size: \"small\",\n          className: \"backtest-card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: '300px'\n            },\n            children: /*#__PURE__*/_jsxDEV(Plot, {\n              data: createDrawdownChart(backtestData.trades).data,\n              layout: createDrawdownChart(backtestData.trades).layout,\n              style: {\n                width: '100%',\n                height: '100%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          title: \"Trade History\",\n          size: \"small\",\n          className: \"backtest-card\",\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            columns: tradeColumns,\n            dataSource: backtestData.trades.map((trade, index) => ({\n              ...trade,\n              key: index\n            })),\n            pagination: {\n              pageSize: 10\n            },\n            size: \"small\",\n            scroll: {\n              x: 800\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n};\n_s(Backtesting, \"Q8T2hk0HQZPtYNtIgf2/65L+PDo=\", false, function () {\n  return [useQuery];\n});\n_c2 = Backtesting;\nexport default Backtesting;\nvar _c, _c2;\n$RefreshReg$(_c, \"BacktestingContainer\");\n$RefreshReg$(_c2, \"Backtesting\");","map":{"version":3,"names":["React","useState","Card","Row","Col","Input","Button","Select","Space","Typography","Spin","message","Table","Statistic","ExperimentOutlined","LineChartOutlined","useQuery","axios","Plot","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","Title","Text","Option","BacktestingContainer","div","_c","fetchBacktest","symbol","strategy","startDate","endDate","initialCash","response","post","start_date","end_date","initial_cash","data","Backtesting","_s","setSymbol","setStrategy","setStartDate","setEndDate","setInitialCash","backtestData","isLoading","refetch","enabled","onError","error","handleBacktest","createEquityCurve","trades","length","dates","equity","currentEquity","i","date","Date","setDate","getDate","push","Math","random","x","y","type","mode","name","line","color","width","layout","title","xaxis","yaxis","height","createDrawdownChart","drawdown","fill","tradeColumns","dataIndex","key","render","toLocaleDateString","price","toFixed","pnl","style","children","fileName","_jsxFileName","lineNumber","columnNumber","pnlPct","days","direction","size","level","className","gutter","xs","sm","placeholder","value","onChange","e","target","toUpperCase","marginTop","parseFloat","prefix","icon","onClick","loading","block","textAlign","padding","lg","total_return","precision","suffix","valueStyle","annualized_return","volatility","sharpe_ratio","max_drawdown","win_rate","strong","replace","total_trades","avg_trade_return","columns","dataSource","map","trade","index","pagination","pageSize","scroll","_c2","$RefreshReg$"],"sources":["/home/kiki/Documents/FinGPT for Everyone/frontend/src/pages/Backtesting.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Card, Row, Col, Input, Button, Select, Space, Typography, Spin, message, Table, Statistic } from 'antd';\nimport { ExperimentOutlined, LineChartOutlined } from '@ant-design/icons';\nimport { useQuery } from 'react-query';\nimport axios from 'axios';\nimport Plot from 'react-plotly.js';\nimport styled from 'styled-components';\n\nconst { Title, Text } = Typography;\nconst { Option } = Select;\n\nconst BacktestingContainer = styled.div`\n  .backtest-card {\n    transition: all 0.3s ease;\n    \n    &:hover {\n      transform: translateY(-2px);\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n    }\n  }\n`;\n\nconst fetchBacktest = async (symbol, strategy, startDate, endDate, initialCash) => {\n  const response = await axios.post('/api/backtest', {\n    symbol,\n    strategy,\n    start_date: startDate,\n    end_date: endDate,\n    initial_cash: initialCash\n  });\n  return response.data;\n};\n\nconst Backtesting = () => {\n  const [symbol, setSymbol] = useState('AAPL');\n  const [strategy, setStrategy] = useState('moving_average');\n  const [startDate, setStartDate] = useState('2023-01-01');\n  const [endDate, setEndDate] = useState('2023-12-31');\n  const [initialCash, setInitialCash] = useState(100000);\n\n  const { data: backtestData, isLoading, refetch } = useQuery(\n    ['backtest', symbol, strategy, startDate, endDate, initialCash],\n    () => fetchBacktest(symbol, strategy, startDate, endDate, initialCash),\n    {\n      enabled: false,\n      onError: (error) => {\n        message.error('Failed to run backtest');\n      }\n    }\n  );\n\n  const handleBacktest = () => {\n    refetch();\n  };\n\n  const createEquityCurve = (trades) => {\n    if (!trades || trades.length === 0) return null;\n\n    // Generate mock equity curve data\n    const dates = [];\n    const equity = [];\n    let currentEquity = initialCash;\n    \n    for (let i = 0; i < 252; i++) {\n      const date = new Date(startDate);\n      date.setDate(date.getDate() + i);\n      dates.push(date);\n      \n      // Simulate equity growth\n      currentEquity *= (1 + (Math.random() - 0.5) * 0.02);\n      equity.push(currentEquity);\n    }\n\n    return {\n      data: [{\n        x: dates,\n        y: equity,\n        type: 'scatter',\n        mode: 'lines',\n        name: 'Equity Curve',\n        line: { color: '#1890ff', width: 2 }\n      }],\n      layout: {\n        title: 'Equity Curve',\n        xaxis: { title: 'Date' },\n        yaxis: { title: 'Portfolio Value ($)' },\n        height: 400\n      }\n    };\n  };\n\n  const createDrawdownChart = (trades) => {\n    if (!trades || trades.length === 0) return null;\n\n    // Generate mock drawdown data\n    const dates = [];\n    const drawdown = [];\n    \n    for (let i = 0; i < 252; i++) {\n      const date = new Date(startDate);\n      date.setDate(date.getDate() + i);\n      dates.push(date);\n      \n      // Simulate drawdown\n      drawdown.push((Math.random() - 0.5) * 20);\n    }\n\n    return {\n      data: [{\n        x: dates,\n        y: drawdown,\n        type: 'scatter',\n        mode: 'lines',\n        name: 'Drawdown %',\n        fill: 'tonexty',\n        line: { color: '#ff4d4f' }\n      }],\n      layout: {\n        title: 'Drawdown Analysis',\n        xaxis: { title: 'Date' },\n        yaxis: { title: 'Drawdown (%)' },\n        height: 300\n      }\n    };\n  };\n\n  const tradeColumns = [\n    {\n      title: 'Entry Date',\n      dataIndex: 'entry_date',\n      key: 'entry_date',\n      render: (date) => new Date(date).toLocaleDateString(),\n    },\n    {\n      title: 'Exit Date',\n      dataIndex: 'exit_date',\n      key: 'exit_date',\n      render: (date) => new Date(date).toLocaleDateString(),\n    },\n    {\n      title: 'Entry Price',\n      dataIndex: 'entry_price',\n      key: 'entry_price',\n      render: (price) => `$${price.toFixed(2)}`,\n    },\n    {\n      title: 'Exit Price',\n      dataIndex: 'exit_price',\n      key: 'exit_price',\n      render: (price) => `$${price.toFixed(2)}`,\n    },\n    {\n      title: 'Quantity',\n      dataIndex: 'quantity',\n      key: 'quantity',\n    },\n    {\n      title: 'P&L',\n      dataIndex: 'pnl',\n      key: 'pnl',\n      render: (pnl) => (\n        <Text style={{ color: pnl >= 0 ? '#52c41a' : '#ff4d4f' }}>\n          ${pnl.toFixed(2)}\n        </Text>\n      ),\n    },\n    {\n      title: 'P&L %',\n      dataIndex: 'pnl_pct',\n      key: 'pnl_pct',\n      render: (pnlPct) => (\n        <Text style={{ color: pnlPct >= 0 ? '#52c41a' : '#ff4d4f' }}>\n          {(pnlPct * 100).toFixed(2)}%\n        </Text>\n      ),\n    },\n    {\n      title: 'Holding Period',\n      dataIndex: 'holding_period',\n      key: 'holding_period',\n      render: (days) => `${days} days`,\n    },\n  ];\n\n  return (\n    <BacktestingContainer>\n      <Space direction=\"vertical\" size=\"large\" style={{ width: '100%' }}>\n        <div>\n          <Title level={2}>🧪 Strategy Backtesting</Title>\n          <Text type=\"secondary\">\n            Test trading strategies with historical data and performance analysis\n          </Text>\n        </div>\n\n        <Card title=\"Backtest Configuration\" size=\"small\" className=\"backtest-card\">\n          <Row gutter={[16, 16]}>\n            <Col xs={24} sm={6}>\n              <Input\n                placeholder=\"Symbol\"\n                value={symbol}\n                onChange={(e) => setSymbol(e.target.value.toUpperCase())}\n              />\n            </Col>\n            <Col xs={24} sm={6}>\n              <Select\n                value={strategy}\n                onChange={setStrategy}\n                style={{ width: '100%' }}\n              >\n                <Option value=\"moving_average\">Moving Average</Option>\n                <Option value=\"rsi\">RSI Strategy</Option>\n              </Select>\n            </Col>\n            <Col xs={24} sm={6}>\n              <Input\n                type=\"date\"\n                value={startDate}\n                onChange={(e) => setStartDate(e.target.value)}\n              />\n            </Col>\n            <Col xs={24} sm={6}>\n              <Input\n                type=\"date\"\n                value={endDate}\n                onChange={(e) => setEndDate(e.target.value)}\n              />\n            </Col>\n          </Row>\n          <Row gutter={[16, 16]} style={{ marginTop: 16 }}>\n            <Col xs={24} sm={12}>\n              <Input\n                placeholder=\"Initial Cash\"\n                value={initialCash}\n                onChange={(e) => setInitialCash(parseFloat(e.target.value) || 100000)}\n                prefix=\"$\"\n              />\n            </Col>\n            <Col xs={24} sm={12}>\n              <Button\n                type=\"primary\"\n                icon={<ExperimentOutlined />}\n                onClick={handleBacktest}\n                loading={isLoading}\n                block\n              >\n                Run Backtest\n              </Button>\n            </Col>\n          </Row>\n        </Card>\n\n        {isLoading && (\n          <div style={{ textAlign: 'center', padding: '50px' }}>\n            <Spin size=\"large\" />\n            <div style={{ marginTop: 16 }}>\n              <Text>Running backtest...</Text>\n            </div>\n          </div>\n        )}\n\n        {backtestData && !isLoading && (\n          <>\n            <Row gutter={[16, 16]}>\n              <Col xs={24} lg={12}>\n                <Card title=\"Performance Metrics\" size=\"small\" className=\"backtest-card\">\n                  <Row gutter={[16, 16]}>\n                    <Col xs={12}>\n                      <Statistic\n                        title=\"Total Return\"\n                        value={backtestData.total_return * 100}\n                        precision={2}\n                        suffix=\"%\"\n                        valueStyle={{ color: backtestData.total_return >= 0 ? '#3f8600' : '#cf1322' }}\n                      />\n                    </Col>\n                    <Col xs={12}>\n                      <Statistic\n                        title=\"Annualized Return\"\n                        value={backtestData.annualized_return * 100}\n                        precision={2}\n                        suffix=\"%\"\n                        valueStyle={{ color: backtestData.annualized_return >= 0 ? '#3f8600' : '#cf1322' }}\n                      />\n                    </Col>\n                    <Col xs={12}>\n                      <Statistic\n                        title=\"Volatility\"\n                        value={backtestData.volatility * 100}\n                        precision={2}\n                        suffix=\"%\"\n                      />\n                    </Col>\n                    <Col xs={12}>\n                      <Statistic\n                        title=\"Sharpe Ratio\"\n                        value={backtestData.sharpe_ratio}\n                        precision={3}\n                      />\n                    </Col>\n                    <Col xs={12}>\n                      <Statistic\n                        title=\"Max Drawdown\"\n                        value={backtestData.max_drawdown * 100}\n                        precision={2}\n                        suffix=\"%\"\n                        valueStyle={{ color: '#cf1322' }}\n                      />\n                    </Col>\n                    <Col xs={12}>\n                      <Statistic\n                        title=\"Win Rate\"\n                        value={backtestData.win_rate * 100}\n                        precision={1}\n                        suffix=\"%\"\n                      />\n                    </Col>\n                  </Row>\n                </Card>\n              </Col>\n              \n              <Col xs={24} lg={12}>\n                <Card title=\"Trade Statistics\" size=\"small\" className=\"backtest-card\">\n                  <Space direction=\"vertical\" style={{ width: '100%' }}>\n                    <div>\n                      <Text strong>Strategy: </Text>\n                      <Text>{backtestData.strategy.replace('_', ' ').toUpperCase()}</Text>\n                    </div>\n                    <div>\n                      <Text strong>Symbol: </Text>\n                      <Text>{backtestData.symbol}</Text>\n                    </div>\n                    <div>\n                      <Text strong>Total Trades: </Text>\n                      <Text>{backtestData.total_trades}</Text>\n                    </div>\n                    <div>\n                      <Text strong>Average Trade Return: </Text>\n                      <Text style={{ color: backtestData.avg_trade_return >= 0 ? '#3f8600' : '#cf1322' }}>\n                        {(backtestData.avg_trade_return * 100).toFixed(2)}%\n                      </Text>\n                    </div>\n                  </Space>\n                </Card>\n              </Col>\n            </Row>\n\n            <Card title=\"Equity Curve\" size=\"small\" className=\"backtest-card\">\n              <div style={{ height: '400px' }}>\n                <Plot\n                  data={createEquityCurve(backtestData.trades).data}\n                  layout={createEquityCurve(backtestData.trades).layout}\n                  style={{ width: '100%', height: '100%' }}\n                />\n              </div>\n            </Card>\n\n            <Card title=\"Drawdown Analysis\" size=\"small\" className=\"backtest-card\">\n              <div style={{ height: '300px' }}>\n                <Plot\n                  data={createDrawdownChart(backtestData.trades).data}\n                  layout={createDrawdownChart(backtestData.trades).layout}\n                  style={{ width: '100%', height: '100%' }}\n                />\n              </div>\n            </Card>\n\n            <Card title=\"Trade History\" size=\"small\" className=\"backtest-card\">\n              <Table\n                columns={tradeColumns}\n                dataSource={backtestData.trades.map((trade, index) => ({\n                  ...trade,\n                  key: index\n                }))}\n                pagination={{ pageSize: 10 }}\n                size=\"small\"\n                scroll={{ x: 800 }}\n              />\n            </Card>\n          </>\n        )}\n      </Space>\n    </BacktestingContainer>\n  );\n};\n\nexport default Backtesting;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}